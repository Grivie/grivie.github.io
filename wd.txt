<!doctype html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <title>Response Example</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;700&display=swap');
        
                body {
                    font-family: josefin sans;
                    background-color: #fff;
                }
        
                .main2 {
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    background-color: hsla(0, 25%, 92%, 0.014);
                    top: 0;
                    left: 50%;
                    transform: translateX(-50%);
                    z-index: 999;
                    display: none;
                }
        
                .swift-bar {
                    background-color: #fff;
                    position: relative;
                    width: 100%;
                    height: 100%;
                    overflow-y: scroll;
                    padding: 20px;
                    bottom: 0;
                    /* border-top-left-radius: 20px;
                      border-top-right-radius: 20px; */
                    box-shadow: 0px 3px 15px #0000001a;
                }
        
                .rounded-50Img {
                    width: 60px;
                    height: 50px;
                    background: #ffffff;
                    padding: 5px;
                    border-radius: 50%;
                    overflow: hidden;
                    position: relative;
                    text-align: center;
                }
        
                a,
                p {
                    margin-bottom: 0;
                    text-decoration: none;
                    columns: inherit;
                }
        
                .font-11 {
                    font-size: 11px;
                }
        
                .text-hitam {
                    color: #000;
                }
        
                input[type=number] {
                    width: 100%;
                    margin: 8px 0;
                    outline: none;
                    padding: 8px;
                    height: 45px;
                    box-sizing: border-box;
                    border-radius: 5px;
                    background-color: #fff;
                    border: none;
                    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.3);
                }
        
                input {
                    text-indent: 10px;
                    font-size: 14px;
                }
        
                input[type=text] {
                    width: 100%;
                    margin: 8px 0;
                    outline: none;
                    padding: 8px;
                    height: 45px;
                    box-sizing: border-box;
                    border-radius: 5px;
                    background-color: #fff;
                    border: none;
                    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.3);
                }
        
                input {
                    text-indent: 10px;
                    font-size: 14px;
                }
        
                .custom-select {
                    position: relative;
                    display: inline-block;
                    width: 100%;
                    height: 40px;
                    text-indent: 5px;
                }
        
                .custom-select select {
                    width: 100%;
                    height: 40px;
                    border: 1px solid #ccc;
                    outline: none;
                    appearance: none;
                    background-color: transparent;
                    padding: 0.5rem;
                    font-size: 16px;
                }
        
                .custom-select select:focus {
                    border-color: #ccc;
        
                }
        
                #loadingOverlay {
                    display: none;
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: rgba(0, 0, 0, 0.5);
                    /* Warna latar belakang gelap */
                    z-index: 998;
                    /* Z-index harus lebih rendah dari loader agar bisa tertutupi */
                }
        
                #loadingIndicator {
                    display: none;
                    align-items: center;
                    justify-content: center;
                    position: fixed;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    z-index: 999;
                }
        
                .loader {
                    border: 6px solid #f3f3f3;
                    /* Light grey */
                    border-top: 6px solid #bd0100;
                    /* Blue */
                    border-radius: 50%;
                    width: 40px;
                    height: 40px;
                    animation: spin 2s linear infinite;
                }
        
                @keyframes spin {
                    0% {
                        transform: rotate(0deg);
                    }
        
                    100% {
                        transform: rotate(360deg);
                    }
                }
        
                .bg-cek {
                    background-color: #bd0100;
                    border: none;
                    outline: none;
                    padding: 8px;
                    border-radius: 5px;
                    color: #fff;
                    width: 100%
                }
        
                .bg-cek:active,
                .bg-cek:focus {
                    outline: none;
                }
        
                .bg-bayar {
                    background-color: #bd0100;
                    border: none;
                    outline: none;
                    padding: 8px;
                    border-radius: 5px;
                    width: 100%;
                    color: #fff;
                }
        
                .bg-bayar:active,
                .bg-bayar:focus {
                    outline: none;
                }
        
                .radioso {
                    background-color: #fff;
                    box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
                    width: 100%;
                    height: auto;
                    border-radius: 5px;
                    padding: 10px;
        
                }
        
                .container {
                    width: 100%;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    padding: 15px;
                    background-color: #white;
                    overflow: hidden;
                }
        
                .struk-container {
                    width: 330px;
                    padding: 10px;
                    border-radius: 5px;
                    background-color: #fff;
                    box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
        
        
                }
        
                .truncate-text {
                    white-space: nowrap;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    text-align: right;
                    font-size: 13px;
                    color: #55555594;
                    font-weight: 500;
                }
    
    .struk-Gpay-popup {
        display: none; /* Menyembunyikan popup secara default */
        position: fixed; /* Memastikan popup tetap berada di layar */
        top: 0;
        left: 0;
        width: 100vw; /* Lebar penuh */
        height: 100vh; /* Tinggi penuh */
        background-color: rgba(0, 0, 0, 0.5); /* Latar belakang gelap dengan transparansi */
        justify-content: center; /* Memusatkan konten */
        align-items: center; /* Memusatkan konten secara vertikal */
        z-index: 1000; /* Memastikan popup di atas elemen lain */
    }

    .struk-Gpay-content {
        background-color: white; /* Warna latar belakang popup */
        padding: 20px;
        border-radius: 10px; /* Sudut melengkung */
        max-width: 100%; /* Lebar maksimum popup */
        height: auto; /* Tinggi otomatis untuk menyesuaikan konten */
        max-height: 90vh; /* Tinggi maksimum popup */
        width: 100%; /* Lebar responsif */
        overflow-y: auto; /* Menambahkan scrollbar jika konten terlalu panjang */
    }

    /* Header */
    .struk-Gpay-header {
        background-color: #bd0100; /* Warna merah Grivie */
        padding: 15px; /* Mengecilkan padding */
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
        text-align: center;
        color: white; /* Warna putih untuk teks di header */
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.3); /* Menambahkan shadow */

    }

    .struk-Gpay-header p {
        margin: 0;
    }

    /* Body */
    .struk-Gpay-body {
        background-color: #f9f9f9;
        padding: 15px; /* Mengecilkan padding */
        color: black; /* Mengatur warna teks menjadi hitam */
    }

    .struk-Gpay-body img {
        max-width: 60px; /* Ukuran logo kecil */
        margin-bottom: 10px;
        background-color: #bd0100;
    }

    .struk-Gpay-row {
        display: flex; /* Menggunakan Flexbox */
        justify-content: space-between; /* Menyebar konten ke kanan dan kiri */
        padding: 5px 0; /* Mengecilkan padding */
    }

    .struk-Gpay-row p {
        margin-bottom: 8px;
        flex-basis: 45%; /* Mengatur lebar kolom menjadi 45% */
        text-align: left; /* Teks rata kiri */
        font-size: 12px; /* Menentukan ukuran font (sesuaikan sesuai kebutuhan) */
    }

    /* Footer */
.struk-Gpay-footer {
    background-color: #bd0100; /* Warna merah Grivie */
    padding: 5px; /* Mengecilkan padding */
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    text-align: center;
    color: white; /* Warna putih untuk teks di footer */
    font-size: 11px;
    height: 35px; /* Atur lebar maksimum sesuai kebutuhan */
    margin: 0 auto; /* Memusatkan footer */
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.3); /* Menambahkan shadow */
}

.struk-Gpay-note {
    color: #bd0100; /* Warna merah Grivie */
    font-size: 12px; /* Ukuran font */
    text-align: center; /* Memusatkan teks */
    margin: 10px 0; /* Margin atas dan bawah */
}




/* Button Style */
.struk-Gpay-back-button {
    background-color: white;
    color: #bd0100;
    padding: 3px 8px; /* Mengecilkan ukuran tombol */
    border-radius: 25px;
    border: 2px solid #bd0100;
    text-align: center;
    font-weight: bold;
    font-size: 10px; /* Mengecilkan ukuran font tombol */
    margin-top: 10px;
    display: inline-block;
    text-decoration: none; /* Menghapus garis bawah */
    float: right; /* Mengubah posisi tombol ke sebelah kanan */
}

.struk-Gpay-back-button:hover {
    background-color: #bd0100;
    color: white;
    text-decoration: none; /* Menghapus garis bawah saat hover */
}
    </style>
</head>

<body>
    <p class="mt-2 px-3">Pilih Bank</p>
    <form id="fetchFormBank" class="px-3 mt-2"> <select id="kodeBank" class="custom-select">
            <option>Pilih Bank</option>
            <option>BNI</option>
            <option>MANDIRI</option>
            <option>BCA</option>
            <option>BRI</option>
            <option>BSI</option>
            <option>BTN</option>
            <option>BTPN</option>
            <option>DANAMON</option>
            <option>PERMATA</option>
            <option>OCBC</option>
            <option>PANIN</option>

        </select> <input type="number" id="tujuanInputBank" placeholder="Masukkan Nomer Rekening" required> <input type="text" id="nominalInput" placeholder="Masukkan Nominal" required>
        <div class="d-flex align-items-center justify-content-between mt-2"> <button type="submit" data-jenis="5" class="bg-cek mt-2">Cek Rekening</button> <button type="button" class="bg-bayar ml-2 mt-2 d-none" id="bayarButtonBank">Tarik Saldo</button> </div>
    </form>
    <div id="loadingBank" class="d-none justify-content-center align-items-center" style="min-height: 100px; display: flex;">
        <div class="loader" role="status"> <span class="sr-only">Loading...</span> </div>
    </div>
    <div id="loadingIndicator" class="d-none justify-content-center align-items-center" style="min-height: 100px; display: flex;">
        <div class="loader" role="status"> <span class="sr-only">Loading...</span> </div>
    </div>
    <div id="responseBank" class="mt-3"></div>
    <div id="resultText" class="mt-3 px-3"></div>
    <script>
    document.addEventListener("DOMContentLoaded", () => {
                    const fetchFormBank = document.getElementById("fetchFormBank");
                    const tujuanInputBank = document.getElementById("tujuanInputBank");
                    const nominalInput = document.getElementById("nominalInput");
                    const kodeBank = document.getElementById("kodeBank");
                    const cekTagihanButtonBank = document.querySelector("[data-jenis='5']");
                    const bayarButtonBank = document.getElementById("bayarButtonBank");
                    const responseDivBank = document.getElementById("responseBank");
                    const loadingDivBank = document.getElementById("loadingBank");
        
                    // Variabel global untuk menyimpan nilai-nilai
                    let globalJenisBank;
                    let globalKodeBanks;
                    let globalTujuanBank;
                    let responseTextBank;
        
                    nominalInput.addEventListener('input', function () {
                        // Menghapus semua karakter selain angka
                        const cleanedValue = this.value.replace(/[^0-9]/g, '');
        
                        // Menetapkan nilai yang telah diformat ke input
                        this.value = Number(cleanedValue).toLocaleString('id-ID');
                    });
        
                    fetchFormBank.addEventListener("submit", async (event) => {
                        event.preventDefault();
        
                        // Mendapatkan nilai nominal dan membersihkan dari karakter non-angka
                        const cleanedValue = nominalInput.value.replace(/[^0-9]/g, '');
        
                        // Mengecek apakah nominal kurang dari 20.000
                        if (Number(cleanedValue) < 20000) {
                            swal({
                                title: "Nominal terlalu kecil",
                                text: "Nominal penarikan minimal adalah 20000",
                                icon: "warning",
                                button: "OK",
                            });
                            return; // Hentikan eksekusi jika nominal terlalu kecil
                        }
        
                        globalKodeBanks = kodeBank.value;
                        const currentDate = new Date();
        
                        // Get individual components of the date and time
                        const year = currentDate.getFullYear();
                        const month = currentDate.getMonth() + 1; // Months are zero-indexed, so add 1
                        const day = currentDate.getDate();
                        const hours = currentDate.getHours();
                        const minutes = currentDate.getMinutes();
                        const seconds = currentDate.getSeconds();
        
                        const formattedDateTime = `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;
                        const tujuans = tujuanInputBank.value;
                        const admin = '2500';
                        const jmlhi = cleanedValue;
                        globalTujuanBank = `${jmlhi}@${tujuans}`;
                        globalJenisBank = cekTagihanButtonBank.getAttribute("data-jenis");
        
                        console.log(globalKodeBanks, "code");
                        console.log(globalTujuanBank, "tujuan");
                        console.log(globalJenisBank, "jenis");
        
                        loadingDivBank.classList.remove("d-none");
        
                        try {
                            const responseBank = await fetch(`https://wd.grivie.my.id/inquirybank?jenis=${globalJenisBank}&kodeproduk=${globalKodeBanks}&tujuan=${globalTujuanBank}`);
                            const dataBank = await responseBank.json();
        
                            responseTextBank = dataBank.msg;
        
                            // Mendapatkan timestamp
                            const timestamp = new Date().getTime().toString();
        
                            // Menambahkan angka nol di depan jika panjang kurang dari 4 digit
                            const paddedTimestamp = timestamp.padStart(4, '0');
        
                            // Mengambil 4 digit terakhir dari timestamp
                            const shortenedTimestamp = paddedTimestamp.slice(-4);
        
                            // Menghasilkan kode unik 4 digit
                            const uniqueCode = Math.floor(1000 + Math.random() * 9000);
        
                            console.log("Kode Unik:", shortenedTimestamp + uniqueCode);
                            console.log(dataBank, "hallo");
        
                            const namaMatch = responseTextBank.match(/NAMA:(.*?)(?= JMLH)/);
                            const namas = namaMatch ? namaMatch[1].trim() : "Tidak ditemukan";
        
                            const jmlhMatch = responseTextBank.match(/JMLH RP\.([0-9,]+)/);
                            const jmlh = jmlhMatch ? jmlhMatch[1].replace(/,/g, '') : "Tidak ditemukan";
                            const formattedNominal = Number(jmlh).toLocaleString('id-ID');
                            const totalNominal = parseInt(jmlh) + parseInt(admin);
                            const formattedTotalNominal = totalNominal.toLocaleString('id-ID');
        
                            console.log("Nama:", namas);
                            console.log("Jumlah:", jmlh);
        
                            const bankInfo = `
                    <div class="px-3">
                        <div class="radioso">
                            <p>Kirim ke : ${globalKodeBanks}</p>
                            <p>Tanggal : ${formattedDateTime}</p>
                            <p>Tujuan: ${tujuans}</p>
                            <p>Nama: ${namas}</p>
                            <p>Jumlah: Rp. ${formattedNominal}</p>
                            <p>Admin: Rp. ${admin}</p>
                            <p>Total: Rp. ${formattedTotalNominal}</p>
                            <div class="mt-3">
                                <p id="pinStatus">PIN ${uniqueCode}</p>
                                <input type="number" id="konfirmBank" placeholder="Masukkan Nomer PIN" required>
                            </div>
                        </div>
                    </div>
                `;
        
                            responseDivBank.innerHTML = bankInfo;
                            loadingDivBank.classList.add("d-none");
                            bayarButtonBank.classList.remove("d-none");
                        } catch (error) {
                            loadingDivBank.classList.add("d-none");
                            console.error("Error during fetch:", error.message);
                            responseDivBank.innerHTML = `Error during fetch: ${error.message}`;
                        }
                    });
        
                    // Event listener for bayarButtonBank click
                    let isProcessing = false;
        
                    bayarButtonBank.addEventListener("click", async () => {
                        const loadingIndicator = document.getElementById("loadingIndicator");
                        // Jika sedang memproses, hentikan eksekusi fungsi
                        if (isProcessing) return;
        
                        const pinValue = document.getElementById("konfirmBank").value;
        
                        // Mengecek apakah PIN sudah dimasukkan atau belum
                        if (pinValue === "") {
                            swal("Peringatan", "Anda belum memasukkan PIN", "warning");
                        } else {
                            try {
                                // Set isProcessing ke true agar fungsi tidak bisa dipanggil ulang
                                isProcessing = true;
                                
                                loadingIndicator.style.display = "block";
                                // Nonaktifkan tombol bayar
                                bayarButtonBank.disabled = true;
        
                                swal("Sukses", "Mohon tunggu. Transaksi sedang diproses...", "success");
        
                                const saldoku = '{saldo}';
                                const saldoasli = saldoku.replace('Rp', '').replace(/\./g, '');
                                const saldo = parseFloat(saldoasli); // Konversi saldo menjadi angka
                                console.log(saldo, "saldoku");
        
                                const jmlhMatch = responseTextBank.match(/JMLH RP\.([0-9,]+)/);
                                const jmlh = jmlhMatch ? jmlhMatch[1].replace(/,/g, '') : "Tidak ditemukan";
                                const admin = '2500';
                                const jumtot = parseInt(jmlh) + parseInt(admin);
        
                                const amounts = jumtot;
        
                                if (saldo >= amounts) {
                                    const nominalWithoutDot = nominalInput.value.replace(/\./g, '');
                                    const tujuanBank = `${nominalWithoutDot}@${tujuanInputBank.value}`;
                                    const trx = '6';
        
                                    const responseBayar = await fetch(`https://wd.grivie.my.id/inquirybank?jenis=${trx}&kodeproduk=${globalKodeBanks}&tujuan=${tujuanBank}`);
                                    const dataBayar = await responseBayar.json();
        
                                    const responhasil = dataBayar.msg;
                                    console.log(responhasil, "jalu");
        
                                    const idTrxMatch = responhasil.match(/IDTRX#(\d+)/);
                                    const noRekMatch = responhasil.match(/NO REK:(\d+)/);
                                    const jumlahMatch = responhasil.match(/JUMLAH: RP (\d+)/);
                                    const pdMatch = responhasil.match(/PD (\d{2}\/\d{2}\/\d{4} \d{2}:\d{2}:\d{2})/);
                                    const namaMatch = responhasil.match(/NAMA:([^]+) JUMLAH:/);
                                    const berhasilMatch = responhasil.match(/BERHASIL/);
                                    const reffMatch = responhasil.match(/REFF:([^ ]+)/);
        
                                    const idTrx = idTrxMatch ? idTrxMatch[1] : "-";
                                    const noRek = noRekMatch ? noRekMatch[1] : "-";
                                    const jumlah = jumlahMatch ? jumlahMatch[1] : "-";
                                    const pd = pdMatch ? pdMatch[1] : "-";
                                    const name = namaMatch ? namaMatch[1] : "-";
                                    const berhasil = berhasilMatch ? "BERHASIL" : "-";
                                    const reff = reffMatch ? reffMatch[1] : "-";
        
                                    console.log("IDTRX:", idTrx);
                                    console.log("NO REK:", noRek);
                                    console.log("JUMLAH:", jumlah);
                                    console.log("PD:", pd);
                                    console.log("NAMA:", name);
        
                                    if (dataBayar.msg && dataBayar.msg.includes("[0061] saldo tidak cukup")) {
                                        swal({
                                            title: "Error",
                                            text: "Sistem sedang maintenance",
                                            icon: "error",
                                        });
                                    } else {
                                        const total = parseInt(jumlah) + parseInt(admin);
        
                                        const amount = total;
                                        const negativeAmount = parseInt(amount) * -1;
                                        const username = '{username}' // Ganti dengan username yang sesuai
        
                                        // Menampilkan bukti transaksi
                                        const bankInfoBayar = `
        <div class="container mt-3">
    <div class="struk-Gpay-content">
        <!-- Struk Header -->
        <div class="struk-Gpay-header">
            <p>Bukti Transaksi G-Pay</p>
        </div>
        <div class="struk-Gpay-body">
            <center>
                <img src="https://lh3.googleusercontent.com/u/0/d/135iQXT8WzkafAkNfqayl3WDJwbBjxavn" alt="Grivie Logo" style="width: 50px; height: 50px; border-radius: 10px;">
            </center>
            <p>Detail Transaksi</p>
            <div class="struk-Gpay-row">
                <div class="col-6">
                    <p>Tanggal </p>
                    <p>Id Transaksi </p>
                    <p>No. referensi </p>
                    <p>No. Rekening </p>
                    <p>Nama Penerima </p>
                    <p>Jumlah Pengiriman </p>
                    <p>Biaya Admin </p>
                    <p>Total </p>
                    <p>Status </p>
                </div>
                <div class="col-6">
                    <p>: ${pd}</p>
                    <p>: ${idTrx}</p>
                    <p>: Grivie | {hp}</p>
                    <p>: ${noRek}</p>
                    <p>: ${name}</p>
                    <p>: Rp.${jumlah}</p>
                    <p>: Rp.${admin}</p>
                    <p>: Rp.${total}</p>
                    <p>: ${berhasil}</p>
                </div>
            </div>
            <p class="struk-Gpay-note"> Terima kasih telah menggunakan G-Pay. </p>
            <a href="action://m/66c0b03fccdca" class="struk-Gpay-back-button">Kembali ke Halaman Utama</a>
            <!-- Tombol kembali -->
        </div>
        <div class="struk-Gpay-footer">
            <p>Powered by Grivie</p>
        </div>
    </div>
</div>`;
        
                                        responseDivBank.innerHTML = bankInfoBayar;
        
                                        // Mengirim data transaksi ke server
                                        var formdata = new FormData();
                                        formdata.append("amount", negativeAmount);
                                        formdata.append("username", username);
        
                                        var requestOptions = {
                                            method: 'POST',
                                            body: formdata,
                                            redirect: 'follow'
                                        };
        
                                        const response = await fetch("https://grivie.my.id/trxgrivie.php", requestOptions);
                                        const result = await response.json();
        
                                        const resultTextElement = document.getElementById("resultText");
                                        if (result.success === false) {
                                            resultTextElement.textContent = result.message;
                                        } else {
                                            resultTextElement.textContent = "";
                                        }
                                    }
        
                                } else {
                                    swal({
                                        icon: 'error',
                                        title: 'Saldo Tidak Cukup',
                                        text: 'Maaf, saldo anda tidak cukup.',
                                    });
                                }
                            } catch (error) {
                                console.log('error', error);
                            } finally {
                                // Proses selesai, aktifkan kembali tombol dan reset flag isProcessing
                                loadingIndicator.style.display = "none";
                                bayarButtonBank.disabled = false;
                                isProcessing = false;
                            }
                        }
                    });
        
        
                });
    </script>
</body>

</html>